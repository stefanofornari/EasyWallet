<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
    <id>dist</id>
    <formats>
        <format>tar.gz</format>
        <!-- uncomment to create the archive directory -->
        <format>dir</format>
        <!-- -->
    </formats>

    <includeBaseDirectory>false</includeBaseDirectory>

    <dependencySets>
        <dependencySet>
            <outputDirectory>lib</outputDirectory>
            <excludes>
                <!--exclude>com.github.jnr:jffi</exclude-->
                <exclude>org.openjfx</exclude>
            </excludes>
        </dependencySet>
        <dependencySet>
            <!--
            I need to put openjfx modules in a different directory because of
            strange error trigger by adding the mysql driver. As long as we do
            not add mysql jdbc driver jar in the classpath, everything works.
            Adding that jar, causes a JVM boot error:

            Error occurred during initialization of boot layer
            java.lang.module.ResolutionException: Modules utils and core export package org.web3j.crypto to module contracts

            It turned out that moving javafx into a separate directory and then
            setting -module-lib accordingly fixed the problem.
            -->
            <outputDirectory>lib/modules</outputDirectory>
            <includes>
                <include>org.openjfx</include>
            </includes>
        </dependencySet>
    </dependencySets>

    <fileSets>
        <fileSet>
            <outputDirectory></outputDirectory>
            <directory>src/main/dist</directory>
            <lineEnding>unix</lineEnding>
            <fileMode>0750</fileMode>
            <directoryMode>0750</directoryMode>
            <filtered>true</filtered>
            <includes>
                <include>**/*</include>
            </includes>
            <excludes>
                <exclude>*.formatted</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <outputDirectory>docs</outputDirectory>
            <directory>src/main/docs</directory>
            <filtered>true</filtered>
            <includes>
                <include>**/*</include>
            </includes>
            <excludes>
                <exclude>*.formatted</exclude>
            </excludes>
        </fileSet>
    </fileSets>
</assembly>